// Generated by CoffeeScript 1.6.3
var c, callback, populateTracks, progress, wrapProp;

wrapProp = function(src, prop, dest, name) {
  Object.defineProperty(dest, name, {
    get: function() {
      return src[prop];
    },
    set: function(val) {
      return src[prop] = val;
    },
    enumerable: true
  });
};

populateTracks = function() {
  var d, newKey, p, t, _i, _j, _len, _len1, _ref, _ref1;
  t = Timeline.getGlobalInstance();
  _ref = t.displayedTracks;
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    d = _ref[_i];
    _ref1 = d.propertyTracks;
    for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
      p = _ref1[_j];
      newKey = {
        time: 0,
        value: hubo.motors[p.propertyName].default_value,
        easing: Timeline.Easing.Linear.EaseNone,
        track: p
      };
      p.keys.push(newKey);
    }
  }
  t.rebuildSelectedTracks();
};

c = new WebGLRobots.DefaultCanvas('#hubo_container');

window.hubo = new Hubo('hubo2', callback = function() {
  var larm;
  c.add(hubo);
  $('#load').hide();
  larm = {};
  wrapProp(hubo.motors.LSP, 'value', larm, 'LSP');
  wrapProp(hubo.motors.LSR, 'value', larm, 'LSR');
  wrapProp(hubo.motors.LSY, 'value', larm, 'LSY');
  wrapProp(hubo.motors.LEP, 'value', larm, 'LEP');
  wrapProp(hubo.motors.LWP, 'value', larm, 'LWP');
  wrapProp(hubo.motors.LWY, 'value', larm, 'LWY');
  anim("Left Arm", larm);
  Timeline.getGlobalInstance().loop(-1);
  return Timeline.getGlobalInstance().start();
}, progress = function(step, total, node) {
  return $('#load').html("Loading " + step + "/" + total);
});
